1. обнаружился еще смешной пробел... определение переменной с var и без.
насколько я понимаю, если без var, то переменная получается глобальной. И именно поэтому, если в данном дз для определения переменной кнопки, вызывающей попап, var не используется - она доступна в классе Pop. А как только ее определить с Var, она становится собственностью window.onload и в Popup не видна.  Правильно?

window.onload = function(){ 
	btn = $('.pop_btn'); // при таком определении btn доступна в Popup и там ее можно, нр, дизайблить
	/* var btn = $('.pop_btn'); при таком определении btn НЕ доступна в Popup*/
	var pop = new Popup(); 
	btn.on('click', function(e) { pop.open('ааа'); }); 
} 

function Popup() {.......}

...но в учебниках пишут, что в современном стандарте определение переменной без var практически недопустимо, ибо может провоцировать возникновение ошибок итд итп...
Вопрос уже стал теоретическим, потому что в дз все решилось несколько иначе.

2. Как запретить событие на время? (на время выполнения некоторого действия, fade  в нашем случае)
ситуация в дз: если кликать по over для закрытия попапа не строго методично, дожидаясь, пока отработает fade, а истерично кликать и кликать, причем попадая в заблюренную кнопку вызова попапа, то в определенный момент, когда реально надо открыть попап, попап и оврелей не отрисуются, а вот фон заблюрится. Следующими кликами ситуация выйдет на нормальный тайминг. Кнопка вызова попапа на время работы Fade дизейблится. Но, как я понимаю, это не спасает ситуацию, это просто "невжимаемость" кнопки визуальная, а событие клика все равно возникает...
В принципе проблема похожа на ситуацию с моей игрой с подсвеченными квадратами, поэтому по твоему совету, Дима, решила проблему установкой флага.
Но может где-то есть смысл не флаги развешивать, а именно запретить событие в каких-то случаях?